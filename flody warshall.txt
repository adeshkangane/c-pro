           // flody warshall 

#include<stdio.h>
#define nV 5
#define INF 999
 void printMatrix(int matrix[][nV]);
 void FloydWarshall(int graph[][nV])
 {
     int matrix[nV][nV],i,j,k;
      for(i=0;i<nV;i++)
        for(j=0;j<nV;j++)
         matrix[i][j]=graph[i][j];
      for(k=0;k<nV;k++)
      {
          for(i=0;i<nV;i++)
          {
              for(j=0;j<nV;j++)
              {
                  if(matrix[i][k]+matrix[k][j]<matrix[i][j])
                    matrix[i][j]=matrix[i][k]+matrix[k][j];
              }
          }
      }
       printMatrix(matrix);
 }
 void printMatrix(int matrix[][nV])
 {
     int i,j;
     for(i=0;i<nV;i++)
     {
         for(j=0;j<nV;j++)
         {
             if(matrix[i][j]==INF)
                printf("%4s","INF");
             else
                printf("%4d",matrix[i][j]);
         }
         printf("\n");
     }
 }
 void main()
 {
     int graph[nV][nV],i,j;
     for(i=0;i<nV;i++)
     {
         for(j=0;j<nV;j++)
            scanf("%d",&graph[i][j]);
     }
      FloydWarshall(graph);
 }
